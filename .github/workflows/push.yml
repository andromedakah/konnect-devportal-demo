name: Developer Portal CI/CD
on: push
env: 
  KONG_KONNECT_TOKEN: ${{ secrets.KONG_KONNECT_TOKEN }}
  KONG_CP_NAME: default
  SERVICE_NAME: resqres-example
  TAG_NAME: api-demo
  PRODUCT_NAME: product-demo1
  PORTAL_ID: 05dd2f6d-0b35-4604-b2fd-a16922ad1bd0
  

jobs:
  deploy-my-product:
    runs-on: ubuntu-latest
    steps:
    - name: Clone repo
      uses: actions/checkout@v2
    # API Product Creation
      # We will check if API Product already exists by getting list of API Products filtered by name. 
      # If total value in the .meta.page.total is 0, that means no API Product with that name is present and we create a new API product else we will just get PRODUCT_ID to save it for further use.
    - name:   create api product
      run: | 
        GET_API_PRODUCT_URL=https://us.api.konghq.com/v2/api-products/?filter%5Bname%5D=$PRODUCT_NAME
        echo $GET_API_PRODUCT_URL 
        mkdir -p results
        touch results/apiProducts.json
        curl --request GET --url $GET_API_PRODUCT_URL --header "Authorization:Bearer $KONG_KONNECT_TOKEN" > results/apiProducts.json
        total=$(cat results/apiProducts.json | jq ".meta.page.total")
        echo $total
        cat results/apiProducts.json
        POST_CREATE_API_PRODUCT_URL=https://us.api.konghq.com/v2/api-products
        echo "Creating API Product............"
        PRODUCT_ID=$(
            if [ "$total" -eq "0" ]; then
                curl --request POST $POST_CREATE_API_PRODUCT_URL  \
                --header "Authorization:Bearer $KONG_KONNECT_TOKEN" \
                --header Content-Type:application/json \
                --data {\"name\":\"$PRODUCT_NAME\"} | jq -r ".id"; else cat results/apiProducts.json | jq -r '.data[0].id';
            fi
            )
        echo "PRODUCT ID is ....: " $PRODUCT_ID
        echo "add varable to github actions"
        echo "PRODUCT_ID=$PRODUCT_ID" >> $GITHUB_ENV
    - name: create api product documentation
      run: | 
        cat products-config/product1-demo/product1-demo.md
        echo $PRODUCT_NAME
        echo $PRODUCT_ID
        base64_data=$(cat products-config/product1-demo/product1-demo.md | base64)
        echo $base64_data
        POST_CREATE_API_PRODUCT_DOC_URL=https://us.api.konghq.com/v2/api-products/$PRODUCT_ID/documents
        echo "Creating API Product Documentation............"
        curl --request POST $POST_CREATE_API_PRODUCT_DOC_URL  \
        --header "Authorization:Bearer $KONG_KONNECT_TOKEN" \
        --header 'Content-Type:application/json' \
        --data '{"slug":"api-product-document","status":"published","title":"API Product Document","content":"IyBBUEkgUHJvZHVjdCBEb2N1bWVudCBIZWFkZXIKQVBJIHByb2R1Y3QgZG9jdW1lbnQgY29udGVudA=="}'

    - name: create api product version
      run: | 
        POST_CREATE_API_PRODUCT_VERSION_URL=https://us.api.konghq.com/v2/api-products/$PRODUCT_ID/product-versions
        echo "Creating API Product Version............"
        curl --request POST $POST_CREATE_API_PRODUCT_VERSION_URL  \
        --header "Authorization:Bearer $KONG_KONNECT_TOKEN" \
        --header Content-Type:application/json \
        --data '{"name":"v1","publish_status":"published","deprecated":false,"gateway_service":{"control_plane_id":"454b11d0-b13d-42dc-a338-37f7ae7ab0f8","id":"728491c5-3f7a-4ab4-b51d-97a0b01c7de9"}}'


    # - name: create api product specification 
    #   run: | 
    #     PRODUCT_VERSION_ID_URL=https://us.api.konghq.com/v2/api-products/$PRODUCT_ID/product-versions?page%5Bsize%5D=10&page%5Bnumber%5D=1&filter%5Bname%5D=$PRODUCT_NAME&filter%5Bpublish_status%5D=unpublished&sort=name%20desc'
    #     PRODUCT_VERSION_ID= $(curl PRODUCT_VERSION_ID_URL | jq -r '.data[0].id')
    #     POST_CREATE_API_PRODUCT_SPEC_URL=https://us.api.konghq.com/v2/api-products/$PRODUCT_ID/product-versions/$PRODUCT_VERSION_ID/specifications
    #     echo "Creating API Product Version............"
    #     curl --request POST $POST_CREATE_API_PRODUCT_SPEC_URL  \
    #     --header "Authorization:Bearer $KONG_KONNECT_TOKEN" \
    #     --header Content-Type:application/json \
    #     --data '{"name":"oas.yaml","content":"TXkgWUFNTCBvciBKU09OIGZvcm1hdHRlZCBPQVMgY29udGVudA=="}' 

    - name: publish product to the portal 
      run: | 
        echo "check if the portal exists"
        $ID = curl --request GET \
              --url 'https://us.api.konghq.com/v2/portals?page%5Bsize%5D=10&page%5Bnumber%5D=1' \
              --header 'accept: application/json'| jq -r '.data[0].id'
        echo $ID
        echo "PORTAL ID is ....: " $PORTAL_ID
        if ( [ "$PORTAL_ID" != "null" ] ); then
              POST_PUBLISH_PRODUCT_TO_PORTAL_URL=https://us.api.konghq.com/v2/portals/$PORTAL_ID/products
              echo "Publishing API Product to Portal............"
              # PUBLISH SERVICE TO PORTAL
              PUBLISH_TO_PORTAL_URL=https://us.api.konghq.com/konnect-api/api/service_packages/$PRODUCT_ID/portals/$PORTAL_ID
              echo $PUBLISH_TO_PORTAL_URL
              echo "Publishing to Portal....."
              curl --request PUT \
                --url $PUBLISH_TO_PORTAL_URL \
                --header "Authorization: Bearer $KONG_KONNECT_TOKEN" > /dev/null 2>&1
        else
              echo "Portal does not exist"
        fi


    