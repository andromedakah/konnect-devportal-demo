name: Developer Portal CI/CD
on: push
env: 
  KONG_KONNECT_TOKEN: ${{ secrets.KONG_KONNECT_TOKEN }}
  KONG_CP_NAME: rb-demo
  SERVICE_NAME: reqres
  TAG_NAME: api-demo
  PRODUCT_NAME: product-demo1
  

jobs:
  deploy-my-product:
    runs-on: ubuntu-latest
    steps:
    # - name: Setup deck
    #   uses: kong/setup-deck@v1
    #   with: 
    #     deck-version: 1.29.2
    - name: Clone repo
      uses: actions/checkout@v2
    # API Product Creation
      # We will check if API Product already exists by getting list of API Products filtered by name. 
      # If total value in the .meta.page.total is 0, that means no API Product with that name is present and we create a new API product else we will just get PRODUCT_ID to save it for further use.
    - name:   CREATE API PRODUCT
      run: | 
        GET_API_PRODUCT_URL=https://us.api.konghq.com/v2/api-products/?filter%5Bname%5D=$PRODUCT_NAME
        echo $GET_API_PRODUCT_URL 
        mkdir -p results
        touch results/apiProducts.json
        curl --request GET --url $GET_API_PRODUCT_URL --header "Authorization:Bearer $KONG_KONNECT_TOKEN" > results/apiProducts.json
        total=$(cat results/apiProducts.json | jq ".meta.page.total")
        echo $total
        cat results/apiProducts.json
        POST_CREATE_API_PRODUCT_URL=https://us.api.konghq.com/v2/api-products
        echo "Creating API Product............"
        PRODUCT_ID=$(
            if [ "$total" -eq "0" ]; then
                curl --request POST $POST_CREATE_API_PRODUCT_URL  \
                --header "Authorization:Bearer $KONG_KONNECT_TOKEN" \
                --header Content-Type:application/json \
                --data {\"name\":\"$PRODUCT_NAME\"} | jq -r ".id"; else cat results/apiProducts.json | jq -r '.data[0].id';
            fi
            )
        echo "PRODUCT ID is ....: " $PRODUCT_ID
    - name: create api product documentation
      run: | 
        base64_data=$(cat procudt-doc.md | base64)
        #echo $base64_data
        POST_CREATE_API_PRODUCT_DOC_URL=https://us.api.konghq.com/v2/api-products/$PRODUCT_ID/documents
        echo "Creating API Product Documentation............"
        curl --request POST $POST_CREATE_API_PRODUCT_DOC_URL  \
        --header "Authorization:Bearer $KONG_KONNECT_TOKEN" \
        --header Content-Type:application/json \
        --data '{
          "slug":"'$PRODUCT_NAME'",
          "status":"'PUBLISHED'",
          "title":"'$PRODUCT_NAME'",
          "content":"'$base64_data'"
          }' > /dev/null 2>&1
    # - name: create api product version
    #   run: | 
    #     POST_CREATE_API_PRODUCT_VERSION_URL=https://us.api.konghq.com/v2/api-products/$PRODUCT_ID/versions
    #     echo "Creating API Product Version............"
    #     curl --request POST $POST_CREATE_API_PRODUCT_VERSION_URL  \
    #     --header "Authorization:Bearer $KONG_KONNECT_TOKEN" \
    #     --header Content-Type:application/json \
    #     --data {\"version\":\"v1\"}
    # - name: link api product to service
    #   run: | 
    #     echo "check if the service exists"
    #     GET_SERVICE_URL=https://us.api.konghq.com/v2/services/?filter%5Bname%5D=$SERVICE_NAME
    #     echo $GET_SERVICE_URL
    #     curl --request GET $GET_SERVICE_URL --header "Authorization:Bearer $KONG_KONNECT_TOKEN" > results/services.json
    #     cat results/services.json
    #     SERVICE_ID=$(cat results/services.json | jq -r '.data[0].id')
    #     echo "SERVICE ID is ....: " $SERVICE_ID
    #     if ( [ "$SERVICE_ID" != "null" ] ); then
    #           POST_LINK_API_PRODUCT_TO_SERVICE_URL=https://us.api.konghq.com/v2/api-products/$PRODUCT_ID/services
    #           echo "Linking API Product to Service............"
    #           curl --request POST $POST_LINK_API_PRODUCT_TO_SERVICE_URL  \
    #           --header "Authorization:Bearer $KONG_KONNECT_TOKEN" \
    #           --header Content-Type:application/json \
    #           --data {\"service\":{\"id\":\"$SERVICE_ID\"}}
    #     else
    #           echo "Service does not exist"
    #     fi

    